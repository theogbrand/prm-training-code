#!/bin/bash
#PBS -q AISG_large
#PBS -j oe
#PBS -k oed
#PBS -N LLava-v1.6-Vicuna-7B-MC0.0-hf-format
#PBS -o pbs_queue_logs/sft_llava_vicuna_v1.6_mc0.0.out
#PBS -l select=1:ngpus=8:ncpus=112:mem=2000gb
#PBS -l walltime=336:00:00

cd $PBS_O_WORKDIR

source .venv/bin/activate
source .env.pbs

export CUDA_VISIBLE_DEVICES=0,1,2,3,4,5,6,7
export NCCL_DEBUG=INFO
export HF_HOME=/scratch_aisg/SPEC-SF-AISG/cache/huggingface

# Reference Running: qsub train/sft_qwen.pbs
uid="$(date +%Y%m%d_%H%M%S)"
base_model="llava-hf/llava-v1.6-vicuna-7b-hf"
dataset_name="ob11/visual-prm-training-data-v1-mc0.0"
epochs=2
micro_batch_size=8 # -> batch_size will be 64 if 8 gpus, per device batch size in single node; max this without OOM
gradient_accumulation_steps=8 # gradually increase first, requires more GPU memory but less than increasing micro_batch_size
lr=2e-5 # -> not used now, using default lr from HFTrainer
max_steps=-1 # -> not used now
min_lr=0 # -> not used now
weight_decay=1e-4 # -> not used now
gpu_count=$(nvidia-smi -L | wc -l) # -> not used now
push_to_hub=false # -> not used now

accelerate launch --config_file=train/deepspeed_zero3.yaml \
    train/sft_llama_llava.py \
    --dataset_name ${dataset_name} \
    --model_name_or_path ${base_model} \
    --per_device_train_batch_size ${micro_batch_size} \
    --gradient_accumulation_steps ${gradient_accumulation_steps} \
    --output_dir training_outputs/sft-$(echo ${dataset_name} | rev | cut -d'-' -f1-5 | rev)-${base_model}-${uid} \
    --bf16 True \
    --torch_dtype bfloat16 \
    --gradient_checkpointing \
    --num_train_epochs ${epochs}  